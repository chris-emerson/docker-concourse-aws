Usage:
  concourse [OPTIONS] web [web-OPTIONS]

Application Options:
  -v, --version                                                                                                 Print the version of Concourse and exit [$CONCOURSE_VERSION]

Help Options:
  -h, --help                                                                                                    Show this help message

[web command options]
          --peer-address=                                                                                       Network address of this web node, reachable by other web nodes. Used for forwarded worker addresses. (default: 127.0.0.1) [$CONCOURSE_PEER_ADDRESS]
          --log-level=[debug|info|error|fatal]                                                                  Minimum level of logs to see. (default: info) [$CONCOURSE_LOG_LEVEL]
          --bind-ip=                                                                                            IP address on which to listen for web traffic. (default: 0.0.0.0) [$CONCOURSE_BIND_IP]
          --bind-port=                                                                                          Port on which to listen for HTTP traffic. (default: 8080) [$CONCOURSE_BIND_PORT]
          --tls-bind-port=                                                                                      Port on which to listen for HTTPS traffic. [$CONCOURSE_TLS_BIND_PORT]
          --tls-cert=                                                                                           File containing an SSL certificate. [$CONCOURSE_TLS_CERT]
          --tls-key=                                                                                            File containing an RSA private key, used to encrypt HTTPS traffic. [$CONCOURSE_TLS_KEY]
          --external-url=                                                                                       URL used to reach any ATC from the outside world. [$CONCOURSE_EXTERNAL_URL]
          --concurrent-request-limit=                                                                           Limit the number of concurrent requests to an API endpoint (Example: ListAllJobs:5) [$CONCOURSE_CONCURRENT_REQUEST_LIMIT]
          --api-max-conns=                                                                                      The maximum number of open connections for the api connection pool. (default: 10) [$CONCOURSE_API_MAX_CONNS]
          --backend-max-conns=                                                                                  The maximum number of open connections for the backend connection pool. (default: 50) [$CONCOURSE_BACKEND_MAX_CONNS]
          --encryption-key=                                                                                     A 16 or 32 length key used to encrypt sensitive information before storing it in the database. [$CONCOURSE_ENCRYPTION_KEY]
          --old-encryption-key=                                                                                 Encryption key previously used for encrypting sensitive information. If provided without a new key, data is encrypted. If provided with a new key, data is
                                                                                                                re-encrypted. [$CONCOURSE_OLD_ENCRYPTION_KEY]
          --debug-bind-ip=                                                                                      IP address on which to listen for the pprof debugger endpoints. (default: 127.0.0.1) [$CONCOURSE_DEBUG_BIND_IP]
          --debug-bind-port=                                                                                    Port on which to listen for the pprof debugger endpoints. (default: 8079) [$CONCOURSE_DEBUG_BIND_PORT]
          --intercept-idle-timeout=                                                                             Length of time for a intercepted session to be idle before terminating. (default: 0m) [$CONCOURSE_INTERCEPT_IDLE_TIMEOUT]
          --component-runner-interval=                                                                          Interval on which runners are kicked off for builds, locks, scans, and checks (default: 10s) [$CONCOURSE_COMPONENT_RUNNER_INTERVAL]
          --lidar-scanner-interval=                                                                             Interval on which the resource scanner will run to see if new checks need to be scheduled (default: 10s) [$CONCOURSE_LIDAR_SCANNER_INTERVAL]
          --lidar-checker-interval=                                                                             Interval on which the resource checker runs any scheduled checks (default: 10s) [$CONCOURSE_LIDAR_CHECKER_INTERVAL]
          --global-resource-check-timeout=                                                                      Time limit on checking for new versions of resources. (default: 1h) [$CONCOURSE_GLOBAL_RESOURCE_CHECK_TIMEOUT]
          --resource-checking-interval=                                                                         Interval on which to check for new versions of resources. (default: 1m) [$CONCOURSE_RESOURCE_CHECKING_INTERVAL]
          --resource-with-webhook-checking-interval=                                                            Interval on which to check for new versions of resources that has webhook defined. (default: 1m) [$CONCOURSE_RESOURCE_WITH_WEBHOOK_CHECKING_INTERVAL]
          --max-checks-per-second=                                                                              Maximum number of checks that can be started per second. If not specified, this will be calculated as (# of resources)/(resource checking interval). -1 value
                                                                                                                will remove this maximum limit of checks per second. [$CONCOURSE_MAX_CHECKS_PER_SECOND]
          --container-placement-strategy=[volume-locality|random|fewest-build-containers|limit-active-tasks]    Method by which a worker is selected during container placement. (default: volume-locality) [$CONCOURSE_CONTAINER_PLACEMENT_STRATEGY]
          --max-active-tasks-per-worker=                                                                        Maximum allowed number of active build tasks per worker. Has effect only when used with limit-active-tasks placement strategy. 0 means no limit. (default: 0)
                                                                                                                [$CONCOURSE_MAX_ACTIVE_TASKS_PER_WORKER]
          --baggageclaim-response-header-timeout=                                                               How long to wait for Baggageclaim to send the response header. (default: 1m) [$CONCOURSE_BAGGAGECLAIM_RESPONSE_HEADER_TIMEOUT]
          --streaming-artifacts-compression=[gzip|zstd]                                                         Compression algorithm for internal streaming. (default: gzip) [$CONCOURSE_STREAMING_ARTIFACTS_COMPRESSION]
          --garden-request-timeout=                                                                             How long to wait for requests to Garden to complete. 0 means no timeout. (default: 5m) [$CONCOURSE_GARDEN_REQUEST_TIMEOUT]
          --cli-artifacts-dir=                                                                                  Directory containing downloadable CLI binaries. [$CONCOURSE_CLI_ARTIFACTS_DIR]
          --log-db-queries                                                                                      Log database queries. [$CONCOURSE_LOG_DB_QUERIES]
          --log-cluster-name                                                                                    Log cluster name. [$CONCOURSE_LOG_CLUSTER_NAME]
          --build-tracker-interval=                                                                             Interval on which to run build tracking. (default: 10s) [$CONCOURSE_BUILD_TRACKER_INTERVAL]
          --default-build-logs-to-retain=                                                                       Default build logs to retain, 0 means all [$CONCOURSE_DEFAULT_BUILD_LOGS_TO_RETAIN]
          --max-build-logs-to-retain=                                                                           Maximum build logs to retain, 0 means not specified. Will override values configured in jobs [$CONCOURSE_MAX_BUILD_LOGS_TO_RETAIN]
          --default-days-to-retain-build-logs=                                                                  Default days to retain build logs. 0 means unlimited [$CONCOURSE_DEFAULT_DAYS_TO_RETAIN_BUILD_LOGS]
          --max-days-to-retain-build-logs=                                                                      Maximum days to retain build logs, 0 means not specified. Will override values configured in jobs [$CONCOURSE_MAX_DAYS_TO_RETAIN_BUILD_LOGS]
          --job-scheduling-max-in-flight=                                                                       Maximum number of jobs to be scheduling at the same time (default: 32) [$CONCOURSE_JOB_SCHEDULING_MAX_IN_FLIGHT]
          --default-task-cpu-limit=                                                                             Default max number of cpu shares per task, 0 means unlimited [$CONCOURSE_DEFAULT_TASK_CPU_LIMIT]
          --default-task-memory-limit=                                                                          Default maximum memory per task, 0 means unlimited [$CONCOURSE_DEFAULT_TASK_MEMORY_LIMIT]
          --enable-build-auditing                                                                               Enable auditing for all api requests connected to builds. [$CONCOURSE_ENABLE_BUILD_AUDITING]
          --enable-container-auditing                                                                           Enable auditing for all api requests connected to containers. [$CONCOURSE_ENABLE_CONTAINER_AUDITING]
          --enable-job-auditing                                                                                 Enable auditing for all api requests connected to jobs. [$CONCOURSE_ENABLE_JOB_AUDITING]
          --enable-pipeline-auditing                                                                            Enable auditing for all api requests connected to pipelines. [$CONCOURSE_ENABLE_PIPELINE_AUDITING]
          --enable-resource-auditing                                                                            Enable auditing for all api requests connected to resources. [$CONCOURSE_ENABLE_RESOURCE_AUDITING]
          --enable-system-auditing                                                                              Enable auditing for all api requests connected to system transactions. [$CONCOURSE_ENABLE_SYSTEM_AUDITING]
          --enable-team-auditing                                                                                Enable auditing for all api requests connected to teams. [$CONCOURSE_ENABLE_TEAM_AUDITING]
          --enable-worker-auditing                                                                              Enable auditing for all api requests connected to workers. [$CONCOURSE_ENABLE_WORKER_AUDITING]
          --enable-volume-auditing                                                                              Enable auditing for all api requests connected to volumes. [$CONCOURSE_ENABLE_VOLUME_AUDITING]
          --config-rbac=                                                                                        Customize RBAC role-action mapping. [$CONCOURSE_CONFIG_RBAC]
          --system-claim-key=                                                                                   The token claim key to use when matching system-claim-values (default: aud) [$CONCOURSE_SYSTEM_CLAIM_KEY]
          --system-claim-value=                                                                                 Configure which token requests should be considered 'system' requests. (default: concourse-worker) [$CONCOURSE_SYSTEM_CLAIM_VALUE]
          --base-resource-type-defaults=                                                                        Base resource type defaults [$CONCOURSE_BASE_RESOURCE_TYPE_DEFAULTS]

    Let's Encrypt Configuration:
          --enable-lets-encrypt                                                                                 Automatically configure TLS certificates via Let's Encrypt/ACME. [$CONCOURSE_ENABLE_LETS_ENCRYPT]
          --lets-encrypt-acme-url=                                                                              URL of the ACME CA directory endpoint. (default: https://acme-v02.api.letsencrypt.org/directory) [$CONCOURSE_LETS_ENCRYPT_ACME_URL]

    PostgreSQL Configuration:
          --postgres-host=                                                                                      The host to connect to. (default: 127.0.0.1) [$CONCOURSE_POSTGRES_HOST]
          --postgres-port=                                                                                      The port to connect to. (default: 5432) [$CONCOURSE_POSTGRES_PORT]
          --postgres-socket=                                                                                    Path to a UNIX domain socket to connect to. [$CONCOURSE_POSTGRES_SOCKET]
          --postgres-user=                                                                                      The user to sign in as. [$CONCOURSE_POSTGRES_USER]
          --postgres-password=                                                                                  The user's password. [$CONCOURSE_POSTGRES_PASSWORD]
          --postgres-sslmode=[disable|require|verify-ca|verify-full]                                            Whether or not to use SSL. (default: disable) [$CONCOURSE_POSTGRES_SSLMODE]
          --postgres-ca-cert=                                                                                   CA cert file location, to verify when connecting with SSL. [$CONCOURSE_POSTGRES_CA_CERT]
          --postgres-client-cert=                                                                               Client cert file location. [$CONCOURSE_POSTGRES_CLIENT_CERT]
          --postgres-client-key=                                                                                Client key file location. [$CONCOURSE_POSTGRES_CLIENT_KEY]
          --postgres-connect-timeout=                                                                           Dialing timeout. (0 means wait indefinitely) (default: 5m) [$CONCOURSE_POSTGRES_CONNECT_TIMEOUT]
          --postgres-database=                                                                                  The name of the database to use. (default: atc) [$CONCOURSE_POSTGRES_DATABASE]

    Credential Management:
          --secret-retry-attempts=                                                                              The number of attempts secret will be retried to be fetched, in case a retryable error happens. (default: 5) [$CONCOURSE_SECRET_RETRY_ATTEMPTS]
          --secret-retry-interval=                                                                              The interval between secret retry retrieval attempts. (default: 1s) [$CONCOURSE_SECRET_RETRY_INTERVAL]
          --secret-cache-enabled                                                                                Enable in-memory cache for secrets [$CONCOURSE_SECRET_CACHE_ENABLED]
          --secret-cache-duration=                                                                              If the cache is enabled, secret values will be cached for not longer than this duration (it can be less, if underlying secret lease time is smaller) (default:
                                                                                                                1m) [$CONCOURSE_SECRET_CACHE_DURATION]
          --secret-cache-duration-notfound=                                                                     If the cache is enabled, secret not found responses will be cached for this duration (default: 10s) [$CONCOURSE_SECRET_CACHE_DURATION_NOTFOUND]
          --secret-cache-purge-interval=                                                                        If the cache is enabled, expired items will be removed on this interval (default: 10m) [$CONCOURSE_SECRET_CACHE_PURGE_INTERVAL]

    AWS SecretsManager Credential Management:
          --aws-secretsmanager-access-key=                                                                      AWS Access key ID [$CONCOURSE_AWS_SECRETSMANAGER_ACCESS_KEY]
          --aws-secretsmanager-secret-key=                                                                      AWS Secret Access Key [$CONCOURSE_AWS_SECRETSMANAGER_SECRET_KEY]
          --aws-secretsmanager-session-token=                                                                   AWS Session Token [$CONCOURSE_AWS_SECRETSMANAGER_SESSION_TOKEN]
          --aws-secretsmanager-region=                                                                          AWS region to send requests to [$CONCOURSE_AWS_SECRETSMANAGER_REGION]
          --aws-secretsmanager-pipeline-secret-template=                                                        AWS Secrets Manager secret identifier template used for pipeline specific parameter (default: /concourse/{{.Team}}/{{.Pipeline}}/{{.Secret}})
                                                                                                                [$CONCOURSE_AWS_SECRETSMANAGER_PIPELINE_SECRET_TEMPLATE]
          --aws-secretsmanager-team-secret-template=                                                            AWS Secrets Manager secret identifier  template used for team specific parameter (default: /concourse/{{.Team}}/{{.Secret}})
                                                                                                                [$CONCOURSE_AWS_SECRETSMANAGER_TEAM_SECRET_TEMPLATE]

    AWS SSM Credential Management:
          --aws-ssm-access-key=                                                                                 AWS Access key ID [$CONCOURSE_AWS_SSM_ACCESS_KEY]
          --aws-ssm-secret-key=                                                                                 AWS Secret Access Key [$CONCOURSE_AWS_SSM_SECRET_KEY]
          --aws-ssm-session-token=                                                                              AWS Session Token [$CONCOURSE_AWS_SSM_SESSION_TOKEN]
          --aws-ssm-region=                                                                                     AWS region to send requests to [$CONCOURSE_AWS_SSM_REGION]
          --aws-ssm-pipeline-secret-template=                                                                   AWS SSM parameter name template used for pipeline specific parameter (default: /concourse/{{.Team}}/{{.Pipeline}}/{{.Secret}})
                                                                                                                [$CONCOURSE_AWS_SSM_PIPELINE_SECRET_TEMPLATE]
          --aws-ssm-team-secret-template=                                                                       AWS SSM parameter name template used for team specific parameter (default: /concourse/{{.Team}}/{{.Secret}}) [$CONCOURSE_AWS_SSM_TEAM_SECRET_TEMPLATE]

    Vault Credential Management:
          --vault-url=                                                                                          Vault server address used to access secrets. [$CONCOURSE_VAULT_URL]
          --vault-path-prefix=                                                                                  Path under which to namespace credential lookup. (default: /concourse) [$CONCOURSE_VAULT_PATH_PREFIX]
          --vault-lookup-templates=                                                                             Path templates for credential lookup (default: /{{.Team}}/{{.Pipeline}}/{{.Secret}}, /{{.Team}}/{{.Secret}}) [$CONCOURSE_VAULT_LOOKUP_TEMPLATES]
          --vault-shared-path=                                                                                  Path under which to lookup shared credentials. [$CONCOURSE_VAULT_SHARED_PATH]
          --vault-namespace=                                                                                    Vault namespace to use for authentication and secret lookup. [$CONCOURSE_VAULT_NAMESPACE]
          --vault-ca-cert=                                                                                      Path to a PEM-encoded CA cert file to use to verify the vault server SSL cert. [$CONCOURSE_VAULT_CA_CERT]
          --vault-ca-path=                                                                                      Path to a directory of PEM-encoded CA cert files to verify the vault server SSL cert. [$CONCOURSE_VAULT_CA_PATH]
          --vault-client-cert=                                                                                  Path to the client certificate for Vault authorization. [$CONCOURSE_VAULT_CLIENT_CERT]
          --vault-client-key=                                                                                   Path to the client private key for Vault authorization. [$CONCOURSE_VAULT_CLIENT_KEY]
          --vault-server-name=                                                                                  If set, is used to set the SNI host when connecting via TLS. [$CONCOURSE_VAULT_SERVER_NAME]
          --vault-insecure-skip-verify                                                                          Enable insecure SSL verification. [$CONCOURSE_VAULT_INSECURE_SKIP_VERIFY]
          --vault-client-token=                                                                                 Client token for accessing secrets within the Vault server. [$CONCOURSE_VAULT_CLIENT_TOKEN]
          --vault-auth-backend=                                                                                 Auth backend to use for logging in to Vault. [$CONCOURSE_VAULT_AUTH_BACKEND]
          --vault-auth-backend-max-ttl=                                                                         Time after which to force a re-login. If not set, the token will just be continuously renewed. [$CONCOURSE_VAULT_AUTH_BACKEND_MAX_TTL]
          --vault-retry-max=                                                                                    The maximum time between retries when logging in or re-authing a secret. (default: 5m) [$CONCOURSE_VAULT_RETRY_MAX]
          --vault-retry-initial=                                                                                The initial time between retries when logging in or re-authing a secret. (default: 1s) [$CONCOURSE_VAULT_RETRY_INITIAL]
          --vault-auth-param=NAME:VALUE                                                                         Paramter to pass when logging in via the backend. Can be specified multiple times. [$CONCOURSE_VAULT_AUTH_PARAM]

    Conjur Credential Management:
          --conjur-appliance-url=                                                                               URL of the conjur instance [$CONCOURSE_CONJUR_APPLIANCE_URL]
          --conjur-account=                                                                                     Conjur Account [$CONCOURSE_CONJUR_ACCOUNT]
          --conjur-cert-file=                                                                                   Cert file used if conjur instance is using a self signed cert. E.g. /path/to/conjur.pem [$CONCOURSE_CONJUR_CERT_FILE]
          --conjur-authn-login=                                                                                 Host username. E.g host/concourse [$CONCOURSE_CONJUR_AUTHN_LOGIN]
          --conjur-authn-api-key=                                                                               Api key related to the host [$CONCOURSE_CONJUR_AUTHN_API_KEY]
          --conjur-authn-token-file=                                                                            Token file used if conjur instance is running in k8s or iam. E.g. /path/to/token_file [$CONCOURSE_CONJUR_AUTHN_TOKEN_FILE]
          --conjur-pipeline-secret-template=                                                                    Conjur secret identifier template used for pipeline specific parameter (default: concourse/{{.Team}}/{{.Pipeline}}/{{.Secret}})
                                                                                                                [$CONCOURSE_CONJUR_PIPELINE_SECRET_TEMPLATE]
          --conjur-team-secret-template=                                                                        Conjur secret identifier template used for team specific parameter (default: concourse/{{.Team}}/{{.Secret}}) [$CONCOURSE_CONJUR_TEAM_SECRET_TEMPLATE]
          --conjur-secret-template=                                                                             Conjur secret identifier template used for full path conjur secrets (default: vaultName/{{.Secret}}) [$CONCOURSE_CONJUR_SECRET_TEMPLATE]

    CredHub Credential Management:
          --credhub-url=                                                                                        CredHub server address used to access secrets. [$CONCOURSE_CREDHUB_URL]
          --credhub-path-prefix=                                                                                Path under which to namespace credential lookup. (default: /concourse) [$CONCOURSE_CREDHUB_PATH_PREFIX]
          --credhub-ca-cert=                                                                                    Paths to PEM-encoded CA cert files to use to verify the CredHub server SSL cert. [$CONCOURSE_CREDHUB_CA_CERT]
          --credhub-client-cert=                                                                                Path to the client certificate for mutual TLS authorization. [$CONCOURSE_CREDHUB_CLIENT_CERT]
          --credhub-client-key=                                                                                 Path to the client private key for mutual TLS authorization. [$CONCOURSE_CREDHUB_CLIENT_KEY]
          --credhub-insecure-skip-verify                                                                        Enable insecure SSL verification. [$CONCOURSE_CREDHUB_INSECURE_SKIP_VERIFY]
          --credhub-client-id=                                                                                  Client ID for CredHub authorization. [$CONCOURSE_CREDHUB_CLIENT_ID]
          --credhub-client-secret=                                                                              Client secret for CredHub authorization. [$CONCOURSE_CREDHUB_CLIENT_SECRET]

    Dummy Credential Management:
          --dummy-creds-var=[TEAM/[PIPELINE/]]VAR=VALUE                                                         A YAML value to expose via credential management. Can be prefixed with a team and/or pipeline to limit scope. [$CONCOURSE_DUMMY_CREDS_VAR]

    Kubernetes Credential Management:
          --kubernetes-in-cluster                                                                               Enables the in-cluster client. [$CONCOURSE_KUBERNETES_IN_CLUSTER]
          --kubernetes-config-path=                                                                             Path to Kubernetes config when running ATC outside Kubernetes. [$CONCOURSE_KUBERNETES_CONFIG_PATH]
          --kubernetes-namespace-prefix=                                                                        Prefix to use for Kubernetes namespaces under which secrets will be looked up. (default: concourse-) [$CONCOURSE_KUBERNETES_NAMESPACE_PREFIX]

    Metrics & Diagnostics:
          --metrics-host-name=                                                                                  Host string to attach to emitted metrics. [$CONCOURSE_METRICS_HOST_NAME]
          --metrics-attribute=NAME:VALUE                                                                        A key-value attribute to attach to emitted metrics. Can be specified multiple times. [$CONCOURSE_METRICS_ATTRIBUTE]
          --metrics-buffer-size=                                                                                The size of the buffer used in emitting event metrics. (default: 1000) [$CONCOURSE_METRICS_BUFFER_SIZE]
          --capture-error-metrics                                                                               Enable capturing of error log metrics [$CONCOURSE_CAPTURE_ERROR_METRICS]

    Metric Emitter (Datadog):
          --datadog-agent-host=                                                                                 Datadog agent host to expose dogstatsd metrics [$CONCOURSE_DATADOG_AGENT_HOST]
          --datadog-agent-port=                                                                                 Datadog agent port to expose dogstatsd metrics [$CONCOURSE_DATADOG_AGENT_PORT]
          --datadog-prefix=                                                                                     Prefix for all metrics to easily find them in Datadog [$CONCOURSE_DATADOG_PREFIX]

    Metric Emitter (InfluxDB):
          --influxdb-url=                                                                                       InfluxDB server address to emit points to. [$CONCOURSE_INFLUXDB_URL]
          --influxdb-database=                                                                                  InfluxDB database to write points to. [$CONCOURSE_INFLUXDB_DATABASE]
          --influxdb-username=                                                                                  InfluxDB server username. [$CONCOURSE_INFLUXDB_USERNAME]
          --influxdb-password=                                                                                  InfluxDB server password. [$CONCOURSE_INFLUXDB_PASSWORD]
          --influxdb-insecure-skip-verify                                                                       Skip SSL verification when emitting to InfluxDB. [$CONCOURSE_INFLUXDB_INSECURE_SKIP_VERIFY]
          --influxdb-batch-size=                                                                                Number of points to batch together when emitting to InfluxDB. (default: 5000) [$CONCOURSE_INFLUXDB_BATCH_SIZE]
          --influxdb-batch-duration=                                                                            The duration to wait before emitting a batch of points to InfluxDB, disregarding influxdb-batch-size. (default: 300s) [$CONCOURSE_INFLUXDB_BATCH_DURATION]

    Metric Emitter (Lager):
          --emit-to-logs                                                                                        Emit metrics to logs. [$CONCOURSE_EMIT_TO_LOGS]

    Metric Emitter (NewRelic):
          --newrelic-account-id=                                                                                New Relic Account ID [$CONCOURSE_NEWRELIC_ACCOUNT_ID]
          --newrelic-api-key=                                                                                   New Relic Insights API Key [$CONCOURSE_NEWRELIC_API_KEY]
          --newrelic-insights-api-url=                                                                          Base Url for insights Insert API (default: https://insights-collector.newrelic.com) [$CONCOURSE_NEWRELIC_INSIGHTS_API_URL]
          --newrelic-service-prefix=                                                                            An optional prefix for emitted New Relic events [$CONCOURSE_NEWRELIC_SERVICE_PREFIX]
          --newrelic-batch-size=                                                                                Number of events to batch together before emitting (default: 2000) [$CONCOURSE_NEWRELIC_BATCH_SIZE]
          --newrelic-batch-duration=                                                                            Length of time to wait between emitting until all currently batched events are emitted (default: 60s) [$CONCOURSE_NEWRELIC_BATCH_DURATION]
          --newrelic-batch-disable-compression                                                                  Disables compression of the batch before sending it [$CONCOURSE_NEWRELIC_BATCH_DISABLE_COMPRESSION]

    Metric Emitter (Prometheus):
          --prometheus-bind-ip=                                                                                 IP to listen on to expose Prometheus metrics. [$CONCOURSE_PROMETHEUS_BIND_IP]
          --prometheus-bind-port=                                                                               Port to listen on to expose Prometheus metrics. [$CONCOURSE_PROMETHEUS_BIND_PORT]

    Tracing:
          --tracing-jaeger-endpoint=                                                                            jaeger http-based thrift collector [$CONCOURSE_TRACING_JAEGER_ENDPOINT]
          --tracing-jaeger-tags=                                                                                tags to add to the components [$CONCOURSE_TRACING_JAEGER_TAGS]
          --tracing-jaeger-service=                                                                             jaeger process service name (default: web) [$CONCOURSE_TRACING_JAEGER_SERVICE]
          --tracing-stackdriver-projectid=                                                                      GCP's Project ID [$CONCOURSE_TRACING_STACKDRIVER_PROJECTID]

    Policy Checking:
          --policy-check-filter-http-method=                                                                    API http method to go through policy check [$CONCOURSE_POLICY_CHECK_FILTER_HTTP_METHOD]
          --policy-check-filter-action=                                                                         Actions in the list will go through policy check [$CONCOURSE_POLICY_CHECK_FILTER_ACTION]
          --policy-check-filter-action-skip=                                                                    Actions the list will not go through policy check [$CONCOURSE_POLICY_CHECK_FILTER_ACTION_SKIP]

    Policy Check Agent (Open Policy Agent):
          --opa-url=                                                                                            OPA policy check endpoint. [$CONCOURSE_OPA_URL]
          --opa-timeout=                                                                                        OPA request timeout. (default: 5s) [$CONCOURSE_OPA_TIMEOUT]

    Web Server:
          --x-frame-options=                                                                                    The value to set for X-Frame-Options. (default: deny) [$CONCOURSE_X_FRAME_OPTIONS]
          --cluster-name=                                                                                       A name for this Concourse cluster, to be displayed on the dashboard page. [$CONCOURSE_CLUSTER_NAME]
          --client-id=                                                                                          Client ID to use for login flow (default: concourse-web) [$CONCOURSE_CLIENT_ID]
          --client-secret=                                                                                      Client secret to use for login flow [$CONCOURSE_CLIENT_SECRET]

    Garbage Collection:
          --gc-interval=                                                                                        Interval on which to perform garbage collection. (default: 30s) [$CONCOURSE_GC_INTERVAL]
          --gc-one-off-grace-period=                                                                            Period after which one-off build containers will be garbage-collected. (default: 5m) [$CONCOURSE_GC_ONE_OFF_GRACE_PERIOD]
          --gc-missing-grace-period=                                                                            Period after which to reap containers and volumes that were created but went missing from the worker. (default: 5m) [$CONCOURSE_GC_MISSING_GRACE_PERIOD]
          --gc-hijack-grace-period=                                                                             Period after which hijacked containers will be garbage collected (default: 5m) [$CONCOURSE_GC_HIJACK_GRACE_PERIOD]
          --gc-failed-grace-period=                                                                             Period after which failed containers will be garbage collected (default: 120h) [$CONCOURSE_GC_FAILED_GRACE_PERIOD]
          --gc-check-recycle-period=                                                                            Period after which to reap checks that are completed. (default: 1m) [$CONCOURSE_GC_CHECK_RECYCLE_PERIOD]

    Syslog Drainer Configuration:
          --syslog-hostname=                                                                                    Client hostname with which the build logs will be sent to the syslog server. (default: atc-syslog-drainer) [$CONCOURSE_SYSLOG_HOSTNAME]
          --syslog-address=                                                                                     Remote syslog server address with port (Example: 0.0.0.0:514). [$CONCOURSE_SYSLOG_ADDRESS]
          --syslog-transport=                                                                                   Transport protocol for syslog messages (Currently supporting tcp, udp & tls). [$CONCOURSE_SYSLOG_TRANSPORT]
          --syslog-drain-interval=                                                                              Interval over which checking is done for new build logs to send to syslog server (duration measurement units are s/m/h; eg. 30s/30m/1h) (default: 30s)
                                                                                                                [$CONCOURSE_SYSLOG_DRAIN_INTERVAL]
          --syslog-ca-cert=                                                                                     Paths to PEM-encoded CA cert files to use to verify the Syslog server SSL cert. [$CONCOURSE_SYSLOG_CA_CERT]

    Authentication:
          --cookie-secure                                                                                       Force sending secure flag on http cookies [$CONCOURSE_COOKIE_SECURE]
          --auth-duration=                                                                                      Length of time for which tokens are valid. Afterwards, users will have to log back in. (default: 24h) [$CONCOURSE_AUTH_DURATION]
          --session-signing-key=                                                                                File containing an RSA private key, used to sign auth tokens. [$CONCOURSE_SESSION_SIGNING_KEY]
          --add-local-user=USERNAME:PASSWORD                                                                    List of username:password combinations for all your local users. The password can be bcrypted - if so, it must have a minimum cost of 10.
                                                                                                                [$CONCOURSE_ADD_LOCAL_USER]
          --add-client=CLIENT_ID:CLIENT_SECRET                                                                  List of client_id:client_secret combinations [$CONCOURSE_ADD_CLIENT]

    Authentication (Main Team):
          --main-team-local-user=USERNAME                                                                       A whitelisted local concourse user. These are the users you've added at web startup with the --add-local-user flag. [$CONCOURSE_MAIN_TEAM_LOCAL_USER]
      -c, --main-team-config=                                                                                   Configuration file for specifying team params [$CONCOURSE_MAIN_TEAM_CONFIG]

    Authentication (Main Team) (Bitbucket Cloud):
          --main-team-bitbucket-cloud-user=USERNAME                                                             A whitelisted Bitbucket Cloud user [$CONCOURSE_MAIN_TEAM_BITBUCKET_CLOUD_USER]
          --main-team-bitbucket-cloud-team=TEAM_NAME                                                            A whitelisted Bitbucket Cloud team [$CONCOURSE_MAIN_TEAM_BITBUCKET_CLOUD_TEAM]

    Authentication (Main Team) (CloudFoundry):
          --main-team-cf-user=USERNAME                                                                          A whitelisted CloudFoundry user [$CONCOURSE_MAIN_TEAM_CF_USER]
          --main-team-cf-org=ORG_NAME                                                                           A whitelisted CloudFoundry org [$CONCOURSE_MAIN_TEAM_CF_ORG]
          --main-team-cf-space=ORG_NAME:SPACE_NAME                                                              (Deprecated) A whitelisted CloudFoundry space for users with the 'developer' role [$CONCOURSE_MAIN_TEAM_CF_SPACE]
          --main-team-cf-space-with-any-role=ORG_NAME:SPACE_NAME                                                A whitelisted CloudFoundry space for users with any role [$CONCOURSE_MAIN_TEAM_CF_SPACE_WITH_ANY_ROLE]
          --main-team-cf-space-with-developer-role=ORG_NAME:SPACE_NAME                                          A whitelisted CloudFoundry space for users with the 'developer' role [$CONCOURSE_MAIN_TEAM_CF_SPACE_WITH_DEVELOPER_ROLE]
          --main-team-cf-space-with-auditor-role=ORG_NAME:SPACE_NAME                                            A whitelisted CloudFoundry space for users with the 'auditor' role [$CONCOURSE_MAIN_TEAM_CF_SPACE_WITH_AUDITOR_ROLE]
          --main-team-cf-space-with-manager-role=ORG_NAME:SPACE_NAME                                            A whitelisted CloudFoundry space for users with the 'manager' role [$CONCOURSE_MAIN_TEAM_CF_SPACE_WITH_MANAGER_ROLE]
          --main-team-cf-space-guid=SPACE_GUID                                                                  A whitelisted CloudFoundry space guid [$CONCOURSE_MAIN_TEAM_CF_SPACE_GUID]

    Authentication (Main Team) (GitHub):
          --main-team-github-user=USERNAME                                                                      A whitelisted GitHub user [$CONCOURSE_MAIN_TEAM_GITHUB_USER]
          --main-team-github-org=ORG_NAME                                                                       A whitelisted GitHub org [$CONCOURSE_MAIN_TEAM_GITHUB_ORG]
          --main-team-github-team=ORG_NAME:TEAM_NAME                                                            A whitelisted GitHub team [$CONCOURSE_MAIN_TEAM_GITHUB_TEAM]

    Authentication (Main Team) (GitLab):
          --main-team-gitlab-user=USERNAME                                                                      A whitelisted GitLab user [$CONCOURSE_MAIN_TEAM_GITLAB_USER]
          --main-team-gitlab-group=GROUP_NAME                                                                   A whitelisted GitLab group [$CONCOURSE_MAIN_TEAM_GITLAB_GROUP]

    Authentication (Main Team) (LDAP):
          --main-team-ldap-user=USERNAME                                                                        A whitelisted LDAP user [$CONCOURSE_MAIN_TEAM_LDAP_USER]
          --main-team-ldap-group=GROUP_NAME                                                                     A whitelisted LDAP group [$CONCOURSE_MAIN_TEAM_LDAP_GROUP]

    Authentication (Main Team) (Microsoft):
          --main-team-microsoft-user=USERNAME                                                                   A whitelisted Microsoft user [$CONCOURSE_MAIN_TEAM_MICROSOFT_USER]
          --main-team-microsoft-group=GROUP_NAME                                                                A whitelisted Microsoft group [$CONCOURSE_MAIN_TEAM_MICROSOFT_GROUP]

    Authentication (Main Team) (OAuth2):
          --main-team-oauth-user=USERNAME                                                                       A whitelisted OAuth2 user [$CONCOURSE_MAIN_TEAM_OAUTH_USER]
          --main-team-oauth-group=GROUP_NAME                                                                    A whitelisted OAuth2 group [$CONCOURSE_MAIN_TEAM_OAUTH_GROUP]

    Authentication (Main Team) (OIDC):
          --main-team-oidc-user=USERNAME                                                                        A whitelisted OIDC user [$CONCOURSE_MAIN_TEAM_OIDC_USER]
          --main-team-oidc-group=GROUP_NAME                                                                     A whitelisted OIDC group [$CONCOURSE_MAIN_TEAM_OIDC_GROUP]

    Authentication (Main Team) (SAML):
          --main-team-saml-user=USERNAME                                                                        A whitelisted SAML user [$CONCOURSE_MAIN_TEAM_SAML_USER]
          --main-team-saml-group=GROUP_NAME                                                                     A whitelisted SAML group [$CONCOURSE_MAIN_TEAM_SAML_GROUP]

    Authentication (Bitbucket Cloud):
          --bitbucket-cloud-client-id=                                                                          (Required) Client id [$CONCOURSE_BITBUCKET_CLOUD_CLIENT_ID]
          --bitbucket-cloud-client-secret=                                                                      (Required) Client secret [$CONCOURSE_BITBUCKET_CLOUD_CLIENT_SECRET]

    Authentication (CloudFoundry):
          --cf-client-id=                                                                                       (Required) Client id [$CONCOURSE_CF_CLIENT_ID]
          --cf-client-secret=                                                                                   (Required) Client secret [$CONCOURSE_CF_CLIENT_SECRET]
          --cf-api-url=                                                                                         (Required) The base API URL of your CF deployment. It will use this information to discover information about the authentication provider.
                                                                                                                [$CONCOURSE_CF_API_URL]
          --cf-ca-cert=                                                                                         CA Certificate [$CONCOURSE_CF_CA_CERT]
          --cf-skip-ssl-validation                                                                              Skip SSL validation [$CONCOURSE_CF_SKIP_SSL_VALIDATION]

    Authentication (GitHub):
          --github-client-id=                                                                                   (Required) Client id [$CONCOURSE_GITHUB_CLIENT_ID]
          --github-client-secret=                                                                               (Required) Client secret [$CONCOURSE_GITHUB_CLIENT_SECRET]
          --github-host=                                                                                        Hostname of GitHub Enterprise deployment (No scheme, No trailing slash) [$CONCOURSE_GITHUB_HOST]
          --github-ca-cert=                                                                                     CA certificate of GitHub Enterprise deployment [$CONCOURSE_GITHUB_CA_CERT]

    Authentication (GitLab):
          --gitlab-client-id=                                                                                   (Required) Client id [$CONCOURSE_GITLAB_CLIENT_ID]
          --gitlab-client-secret=                                                                               (Required) Client secret [$CONCOURSE_GITLAB_CLIENT_SECRET]
          --gitlab-host=                                                                                        Hostname of Gitlab Enterprise deployment (Include scheme, No trailing slash) [$CONCOURSE_GITLAB_HOST]

    Authentication (LDAP):
          --ldap-display-name=                                                                                  The auth provider name displayed to users on the login page [$CONCOURSE_LDAP_DISPLAY_NAME]
          --ldap-host=                                                                                          (Required) The host and optional port of the LDAP server. If port isn't supplied, it will be guessed based on the TLS configuration. 389 or 636.
                                                                                                                [$CONCOURSE_LDAP_HOST]
          --ldap-bind-dn=                                                                                       (Required) Bind DN for searching LDAP users and groups. Typically this is a read-only user. [$CONCOURSE_LDAP_BIND_DN]
          --ldap-bind-pw=                                                                                       (Required) Bind Password for the user specified by 'bind-dn' [$CONCOURSE_LDAP_BIND_PW]
          --ldap-insecure-no-ssl                                                                                Required if LDAP host does not use TLS. [$CONCOURSE_LDAP_INSECURE_NO_SSL]
          --ldap-insecure-skip-verify                                                                           Skip certificate verification [$CONCOURSE_LDAP_INSECURE_SKIP_VERIFY]
          --ldap-start-tls                                                                                      Start on insecure port, then negotiate TLS [$CONCOURSE_LDAP_START_TLS]
          --ldap-ca-cert=                                                                                       CA certificate [$CONCOURSE_LDAP_CA_CERT]
          --ldap-user-search-base-dn=                                                                           BaseDN to start the search from. For example 'cn=users,dc=example,dc=com' [$CONCOURSE_LDAP_USER_SEARCH_BASE_DN]
          --ldap-user-search-filter=                                                                            Optional filter to apply when searching the directory. For example '(objectClass=person)' [$CONCOURSE_LDAP_USER_SEARCH_FILTER]
          --ldap-user-search-username=                                                                          Attribute to match against the inputted username. This will be translated and combined with the other filter as '(<attr>=<username>)'.
                                                                                                                [$CONCOURSE_LDAP_USER_SEARCH_USERNAME]
          --ldap-user-search-scope=                                                                             Can either be: 'sub' - search the whole sub tree or 'one' - only search one level. Defaults to 'sub'. [$CONCOURSE_LDAP_USER_SEARCH_SCOPE]
          --ldap-user-search-id-attr=                                                                           A mapping of attributes on the user entry to claims. Defaults to 'uid'. [$CONCOURSE_LDAP_USER_SEARCH_ID_ATTR]
          --ldap-user-search-email-attr=                                                                        A mapping of attributes on the user entry to claims. Defaults to 'mail'. [$CONCOURSE_LDAP_USER_SEARCH_EMAIL_ATTR]
          --ldap-user-search-name-attr=                                                                         A mapping of attributes on the user entry to claims. [$CONCOURSE_LDAP_USER_SEARCH_NAME_ATTR]
          --ldap-group-search-base-dn=                                                                          BaseDN to start the search from. For example 'cn=groups,dc=example,dc=com' [$CONCOURSE_LDAP_GROUP_SEARCH_BASE_DN]
          --ldap-group-search-filter=                                                                           Optional filter to apply when searching the directory. For example '(objectClass=posixGroup)' [$CONCOURSE_LDAP_GROUP_SEARCH_FILTER]
          --ldap-group-search-scope=                                                                            Can either be: 'sub' - search the whole sub tree or 'one' - only search one level. Defaults to 'sub'. [$CONCOURSE_LDAP_GROUP_SEARCH_SCOPE]
          --ldap-group-search-user-attr=                                                                        Adds an additional requirement to the filter that an attribute in the group match the user's attribute value. The exact filter being added is:
                                                                                                                (<groupAttr>=<userAttr value>) [$CONCOURSE_LDAP_GROUP_SEARCH_USER_ATTR]
          --ldap-group-search-group-attr=                                                                       Adds an additional requirement to the filter that an attribute in the group match the user's attribute value. The exact filter being added is:
                                                                                                                (<groupAttr>=<userAttr value>) [$CONCOURSE_LDAP_GROUP_SEARCH_GROUP_ATTR]
          --ldap-group-search-name-attr=                                                                        The attribute of the group that represents its name. [$CONCOURSE_LDAP_GROUP_SEARCH_NAME_ATTR]

    Authentication (Microsoft):
          --microsoft-client-id=                                                                                (Required) Client id [$CONCOURSE_MICROSOFT_CLIENT_ID]
          --microsoft-client-secret=                                                                            (Required) Client secret [$CONCOURSE_MICROSOFT_CLIENT_SECRET]
          --microsoft-tenant=                                                                                   Microsoft Tenant limitation (common, consumers, organizations, tenant name or tenant uuid) [$CONCOURSE_MICROSOFT_TENANT]
          --microsoft-groups=                                                                                   Allowed Active Directory Groups [$CONCOURSE_MICROSOFT_GROUPS]
          --microsoft-only-security-groups                                                                      Only fetch security groups [$CONCOURSE_MICROSOFT_ONLY_SECURITY_GROUPS]

    Authentication (OAuth2):
          --oauth-display-name=                                                                                 The auth provider name displayed to users on the login page [$CONCOURSE_OAUTH_DISPLAY_NAME]
          --oauth-client-id=                                                                                    (Required) Client id [$CONCOURSE_OAUTH_CLIENT_ID]
          --oauth-client-secret=                                                                                (Required) Client secret [$CONCOURSE_OAUTH_CLIENT_SECRET]
          --oauth-auth-url=                                                                                     (Required) Authorization URL [$CONCOURSE_OAUTH_AUTH_URL]
          --oauth-token-url=                                                                                    (Required) Token URL [$CONCOURSE_OAUTH_TOKEN_URL]
          --oauth-userinfo-url=                                                                                 (Required) UserInfo URL [$CONCOURSE_OAUTH_USERINFO_URL]
          --oauth-scope=                                                                                        Any additional scopes that need to be requested during authorization [$CONCOURSE_OAUTH_SCOPE]
          --oauth-groups-key=                                                                                   The groups key indicates which claim to use to map external groups to Concourse teams. (default: groups) [$CONCOURSE_OAUTH_GROUPS_KEY]
          --oauth-user-id-key=                                                                                  The user id key indicates which claim to use to map an external user id to a Concourse user id. (default: user_id) [$CONCOURSE_OAUTH_USER_ID_KEY]
          --oauth-user-name-key=                                                                                The user name key indicates which claim to use to map an external user name to a Concourse user name. (default: user_name) [$CONCOURSE_OAUTH_USER_NAME_KEY]
          --oauth-ca-cert=                                                                                      CA Certificate [$CONCOURSE_OAUTH_CA_CERT]
          --oauth-skip-ssl-validation                                                                           Skip SSL validation [$CONCOURSE_OAUTH_SKIP_SSL_VALIDATION]

    Authentication (OIDC):
          --oidc-display-name=                                                                                  The auth provider name displayed to users on the login page [$CONCOURSE_OIDC_DISPLAY_NAME]
          --oidc-issuer=                                                                                        (Required) An OIDC issuer URL that will be used to discover provider configuration using the .well-known/openid-configuration [$CONCOURSE_OIDC_ISSUER]
          --oidc-client-id=                                                                                     (Required) Client id [$CONCOURSE_OIDC_CLIENT_ID]
          --oidc-client-secret=                                                                                 (Required) Client secret [$CONCOURSE_OIDC_CLIENT_SECRET]
          --oidc-scope=                                                                                         Any additional scopes that need to be requested during authorization [$CONCOURSE_OIDC_SCOPE]
          --oidc-groups-key=                                                                                    The groups key indicates which claim to use to map external groups to Concourse teams. (default: groups) [$CONCOURSE_OIDC_GROUPS_KEY]
          --oidc-user-name-key=                                                                                 The user name key indicates which claim to use to map an external user name to a Concourse user name. (default: username) [$CONCOURSE_OIDC_USER_NAME_KEY]
          --oidc-hosted-domains=                                                                                List of whitelisted domains when using Google, only users from a listed domain will be allowed to log in [$CONCOURSE_OIDC_HOSTED_DOMAINS]
          --oidc-ca-cert=                                                                                       CA Certificate [$CONCOURSE_OIDC_CA_CERT]
          --oidc-skip-ssl-validation                                                                            Skip SSL validation [$CONCOURSE_OIDC_SKIP_SSL_VALIDATION]

    Authentication (SAML):
          --saml-display-name=                                                                                  The auth provider name displayed to users on the login page [$CONCOURSE_SAML_DISPLAY_NAME]
          --saml-sso-url=                                                                                       (Required) SSO URL used for POST value [$CONCOURSE_SAML_SSO_URL]
          --saml-ca-cert=                                                                                       (Required) CA Certificate [$CONCOURSE_SAML_CA_CERT]
          --saml-entity-issuer=                                                                                 Manually specify dex's Issuer value. [$CONCOURSE_SAML_ENTITY_ISSUER]
          --saml-sso-issuer=                                                                                    Issuer value expected in the SAML response. [$CONCOURSE_SAML_SSO_ISSUER]
          --saml-username-attr=                                                                                 The user name indicates which claim to use to map an external user name to a Concourse user name. (default: name) [$CONCOURSE_SAML_USERNAME_ATTR]
          --saml-email-attr=                                                                                    The email indicates which claim to use to map an external user email to a Concourse user email. (default: email) [$CONCOURSE_SAML_EMAIL_ATTR]
          --saml-groups-attr=                                                                                   The groups key indicates which attribute to use to map external groups to Concourse teams. (default: groups) [$CONCOURSE_SAML_GROUPS_ATTR]
          --saml-groups-delim=                                                                                  If specified, groups are returned as string, this delimiter will be used to split the group string. [$CONCOURSE_SAML_GROUPS_DELIM]
          --saml-name-id-policy-format=                                                                         Requested format of the NameID. The NameID value is is mapped to the ID Token 'sub' claim. [$CONCOURSE_SAML_NAME_ID_POLICY_FORMAT]
          --saml-skip-ssl-validation                                                                            Skip SSL validation [$CONCOURSE_SAML_SKIP_SSL_VALIDATION]

    Feature Flags:
          --enable-global-resources                                                                             Enable equivalent resources across pipelines and teams to share a single version history. [$CONCOURSE_ENABLE_GLOBAL_RESOURCES]
          --enable-redact-secrets                                                                               Enable redacting secrets in build logs. [$CONCOURSE_ENABLE_REDACT_SECRETS]
          --enable-rerun-when-worker-disappears                                                                 Enable automatically build rerun when worker disappears or a network error occurs [$CONCOURSE_ENABLE_RERUN_WHEN_WORKER_DISAPPEARS]
          --enable-across-step                                                                                  Enable the experimental across step to be used in jobs. The API is subject to change. [$CONCOURSE_ENABLE_ACROSS_STEP]
          --enable-skip-checking-not-in-use-resources                                                           Enable not checking resources not in use. This feature improves performance by avoiding unnecessary checks but it has some side effects: 1) not-in-use resources
                                                                                                                will not show version history on the UI; 2) custom resource types of put-only resources will no longer be auto checked. These side effects will be solved in
                                                                                                                7.x. [$CONCOURSE_ENABLE_SKIP_CHECKING_NOT_IN_USE_RESOURCES]

    TSA Configuration:
          --tsa-log-level=[debug|info|error|fatal]                                                              Minimum level of logs to see. (default: info) [$CONCOURSE_TSA_LOG_LEVEL]
          --tsa-bind-ip=                                                                                        IP address on which to listen for SSH. (default: 0.0.0.0) [$CONCOURSE_TSA_BIND_IP]
          --tsa-peer-address=                                                                                   Network address of this web node, reachable by other web nodes. Used for forwarded worker addresses. (default: 127.0.0.1) [$CONCOURSE_TSA_PEER_ADDRESS]
          --tsa-bind-port=                                                                                      Port on which to listen for SSH. (default: 2222) [$CONCOURSE_TSA_BIND_PORT]
          --tsa-debug-bind-ip=                                                                                  IP address on which to listen for the pprof debugger endpoints. (default: 127.0.0.1) [$CONCOURSE_TSA_DEBUG_BIND_IP]
          --tsa-debug-bind-port=                                                                                Port on which to listen for the pprof debugger endpoints. (default: 2221) [$CONCOURSE_TSA_DEBUG_BIND_PORT]
          --tsa-host-key=                                                                                       Path to private key to use for the SSH server. [$CONCOURSE_TSA_HOST_KEY]
          --tsa-authorized-keys=                                                                                Path to file containing keys to authorize, in SSH authorized_keys format (one public key per line). [$CONCOURSE_TSA_AUTHORIZED_KEYS]
          --tsa-team-authorized-keys=NAME:PATH                                                                  Path to file containing keys to authorize, in SSH authorized_keys format (one public key per line). [$CONCOURSE_TSA_TEAM_AUTHORIZED_KEYS]
          --tsa-team-authorized-keys-file=                                                                      Path to file containing a YAML array of teams and their authorized SSH keys, e.g. [{team:foo,ssh_keys:[key1,key2]}]. [$CONCOURSE_TSA_TEAM_AUTHORIZED_KEYS_FILE]
          --tsa-atc-url=                                                                                        ATC API endpoints to which workers will be registered. [$CONCOURSE_TSA_ATC_URL]
          --tsa-client-id=                                                                                      Client used to fetch a token from the auth server. NOTE: if you change this value you will also need to change the --system-claim-value flag so the atc knows to
                                                                                                                allow requests from this client. (default: concourse-worker) [$CONCOURSE_TSA_CLIENT_ID]
          --tsa-client-secret=                                                                                  Client used to fetch a token from the auth server [$CONCOURSE_TSA_CLIENT_SECRET]
          --tsa-token-url=                                                                                      Token endpoint of the auth server [$CONCOURSE_TSA_TOKEN_URL]
          --tsa-scope=                                                                                          Scopes to request from the auth server [$CONCOURSE_TSA_SCOPE]
          --tsa-heartbeat-interval=                                                                             interval on which to heartbeat workers to the ATC (default: 30s) [$CONCOURSE_TSA_HEARTBEAT_INTERVAL]
          --tsa-garden-request-timeout=                                                                         How long to wait for requests to Garden to complete. 0 means no timeout. (default: 5m) [$CONCOURSE_TSA_GARDEN_REQUEST_TIMEOUT]
          --tsa-cluster-name=                                                                                   A name for this Concourse cluster, to be displayed on the dashboard page. [$CONCOURSE_TSA_CLUSTER_NAME]
          --tsa-log-cluster-name                                                                                Log cluster name. [$CONCOURSE_TSA_LOG_CLUSTER_NAME]

